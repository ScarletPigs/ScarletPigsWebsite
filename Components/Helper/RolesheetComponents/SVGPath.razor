@using Microsoft.JSInterop
@using System.Collections.ObjectModel
@inject IJSRuntime JSRuntime

<div id="@id" style="position:absolute; left:0; top:0; right:0; bottom:0;">
    <svg style="width: 100%; height: 100%">
        <!-- SVG content is dynamically handled by JS -->
    </svg>
</div>

@code {
    [Parameter] 
    public ObservableCollection<(string StartId, string EndId)> Connections { get; set; } = new ObservableCollection<(string, string)>();

    [Parameter]
    public EventCallback<ObservableCollection<(string StartId, string EndId)>> ConnectionsChanged { get; set; }

    private string id = Guid.NewGuid().ToString();

    protected override async Task OnInitializedAsync()
    {
        Connections.CollectionChanged += (sender, e) => StateHasChanged();
    }

    public async Task AddConnection(string startId, string endId)
    {

        if (string.IsNullOrEmpty(startId) || string.IsNullOrEmpty(endId))
            throw new ArgumentException("Id cannot be null");

        Connections.Add((startId, endId));
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await RenderSVGPaths();
    }

    private async Task RenderSVGPaths()
    {
        foreach (var connection in Connections)
        {
            await JSRuntime.InvokeVoidAsync("drawRightAngledLine", id, connection.StartId, connection.EndId);
        }
    }
}
